int phi(int n){

    int ret=n;
    
    for(int i=2;i*i<=n;i++){

	if(n%i==0){

	  ret-=ret/i;

	  while(n%i==0){
		n/=i;
	  }

	}

    }

    if(n>1)
	ret-=ret/n;

    return ret;	

}

//above works well in single input


int phi[nmax];
bool mark[nmax];

void sievephi()
{
    int i,j;

    for(i=1; i<=N; i++)
        phi[i]=i;

    phi[1]=1;
    mark[1]=1;

    for(i=2; i<=N; i++)
    {
        if(!mark[i]) // if(phi[i]==i) to save memory
        {
            for(j=i; j<=N; j+=i)
            {
                mark[j]=1;
                phi[j]=phi[j]/i*(i-1);
            }
        }
    }
}

//this one works well if we need phi values for different numbers every time




